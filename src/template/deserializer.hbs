package packets

import (
    "bytes"
{{#if importBinaryPackage}}
    "encoding/binary"
{{/if}}
)

type {{modelType}}Deserializer struct {
{{#each schemas as |schema|}}
    {{schema.camelCaseName}}DtoDeserializer *{{schema.pascalCaseName}}DtoDeserializer
{{/each}}
}

func New{{modelType}}Deserializer() *{{modelType}}Deserializer {
    return &{{modelType}}Deserializer{
    {{#each schemas as |schema|}}
        New{{schema.pascalCaseName}}DtoDeserializer(),
    {{/each}}
    }
}

func (r *{{modelType}}Deserializer) Deserialize(buffer *bytes.Buffer) *{{modelType}} {
    model := &{{modelType}}{}

{{#each fields as |field|~}}
{{~#if field.isNumeric}}
    {{> deserializer-numeric field}}
{{/if}}
{{~#if field.isVarchar}}
    {{> deserializer-varchar field}}
{{/if}}
{{~#if field.isChar}}
    {{> deserializer-char field}}
{{/if}}
{{~#if field.isObject}}
    {{> deserializer-object field}}
{{/if}}
{{~#if field.isArray}}
    {{> deserializer-array field model=../model}}
{{/if}}

{{/each}}

    return model
}
